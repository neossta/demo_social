{"version":3,"file":"static/js/988.c4b2d639.chunk.js","mappings":"yKAEaA,EAAW,SAACC,GACrB,OAAOA,EAAMC,UAAUC,OAGdC,EAAc,SAACH,GACxB,OAAOA,EAAMC,UAAUG,UAGdC,EAAiB,SAACL,GAC1B,OAAOA,EAAMC,UAAUK,aAGfC,EAAgB,SAACP,GAC1B,OAAOA,EAAMC,UAAUO,YAGdC,EAAqB,SAACT,GAC/B,OAAOA,EAAMC,UAAUS,iBAGdC,EAAyB,SAACX,GACnC,OAAOA,EAAMC,UAAUW,qB,2DCtB3B,EAAyB,sBAAzB,EAAiH,sBAAjH,EAA8I,oB,mBCA9I,EAA+B,gC,SCqB/B,EAnBkB,SAACC,GAMf,IALA,IAAIC,EAAaC,KAAKC,KAAKH,EAAMH,gBAAkBG,EAAMT,UACzD,GAAkCa,EAAAA,EAAAA,UAAS,GAA3C,eAAKC,EAAL,KAAiBC,EAAjB,KACIC,GAAcF,EAAa,GAAKL,EAAMT,SAAW,EACjDiB,EAAcH,EAAaL,EAAMT,SACjCkB,EAAQ,GACHC,EAAI,EAAGA,GAAKT,EAAYS,IAC7BD,EAAME,KAAKD,GAEf,OAAQ,2BACHL,EAAa,IAAK,mBAAQO,QAAS,kBAAMN,EAAcD,EAAa,IAAlD,kBAClBI,EACII,QAAO,SAAAC,GAAC,OAAIA,GAAKP,GAAcO,GAAKN,KACpCO,KAAI,SAAAD,GAAC,OAAI,mBAAQE,UAAWF,IAAMd,EAAMP,YAAcwB,OAAuBC,EAAWN,QAAS,SAACO,GAAD,OAAOnB,EAAMoB,cAAcN,IAAnH,SAAwHA,QAEtI,mBAAQF,QAAS,kBAAMN,EAAcD,EAAa,IAAlD,sBCZFgB,EAAO,SAACrB,GACV,OACI,iBAAKgB,UAAWC,EAAhB,WACI,4BAAK,SAAC,KAAD,CAASK,GAAI,YAActB,EAAMuB,GAAjC,UACD,gBAAKC,IAAqB,MAAhBxB,EAAMyB,OAAiBzB,EAAMyB,OAAS,+GAAgHC,IAAI,SAASV,UAAWC,MAD5L,QAIA,4BACI,yBAAMjB,EAAM2B,QACZ,gBAAKX,UAAWC,EAAhB,SAAiCjB,EAAM4B,aAE3C,0BACK5B,EAAM6B,UAAW,mBAAQC,SAAU9B,EAAMD,oBAAoBgC,MAAK,SAAAR,GAAE,OAAIA,IAAOvB,EAAMuB,MAAKX,QAAS,WAChGZ,EAAMgC,SAAShC,EAAMuB,KADP,uBAGZ,mBAAQO,SAAU9B,EAAMD,oBAAoBgC,MAAK,SAAAR,GAAE,OAAIA,IAAOvB,EAAMuB,MAAKX,QAAS,WAChFZ,EAAMiC,OAAOjC,EAAMuB,KADrB,0BAyBtB,EAnBY,SAACvB,GAET,IAAIkC,EAAgBlC,EAAMX,MAAM0B,KAAI,SAAAoB,GAAI,OAAI,SAACd,EAAD,CAAMM,KAAMQ,EAAKR,KAAMJ,GAAIY,EAAKZ,GAAIM,SAAUM,EAAKN,SAAUJ,OAAQU,EAAKC,OAAOC,MAAOT,OAAQO,EAAKP,OAC7IK,OAAQ,WAAQjC,EAAMiC,OAAOE,EAAKZ,KAAOS,SAAU,WAAQhC,EAAMgC,SAASG,EAAKZ,KAAOe,uBAAwB,SAACvC,EAAqBwB,GAASvB,EAAMsC,uBAAuBvC,EAAqBwB,IAC/LxB,oBAAqBC,EAAMD,yBAK/B,OAHAwC,EAAAA,EAAAA,YAAU,WACNC,OAAOC,SAAS,EAAG,OAEf,4BACJ,yBACKP,KAEL,SAAC,EAAD,CAAWrC,gBAAiBG,EAAMH,gBAAiBN,SAAUS,EAAMT,SAClE6B,cAAepB,EAAMoB,cAAgB3B,YAAaO,EAAMP,kBCpC3DiD,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GASD,OATCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAMFtB,cAAgB,SAAC3B,GACb,EAAKO,MAAM2C,eAAelD,GAC1B,EAAKO,MAAM4C,qBAAqBnD,EAAa,EAAKO,MAAMT,WAC3D,EAsBA,OAtBA,yCAED,WACoC,IAA5BsD,KAAK7C,MAAMX,MAAMyD,QACjBD,KAAK7C,MAAM4C,qBAAqBC,KAAK7C,MAAMP,YAAaoD,KAAK7C,MAAMT,YAE1E,oBACD,WACI,OAAO,gCACNsD,KAAK7C,MAAML,YAAa,SAACoD,EAAA,EAAD,IAAe,MACxC,SAAC,EAAD,CAAO1D,MAAOwD,KAAK7C,MAAMX,MACzBQ,gBAAiBgD,KAAK7C,MAAMH,gBAC5BN,SAAUsD,KAAK7C,MAAMT,SACrBE,YAAaoD,KAAK7C,MAAMP,YACxB2B,cAAeyB,KAAKzB,cACpBa,OAAQY,KAAK7C,MAAMiC,OACnBD,SAAUa,KAAK7C,MAAMgC,SACrBM,uBAAwBO,KAAK7C,MAAMsC,uBACnCvC,oBAAqB8C,KAAK7C,MAAMD,6BAInC,EA/BC2C,CAA0BM,EAAAA,WAiChC,ICOA,GAJuBC,EAAAA,EAAAA,KApCD,SAAU9D,GAC5B,MAAO,CACHE,MAAOH,EAASC,GAChBI,SAAUD,EAAYH,GACtBU,gBAAiBD,EAAmBT,GACpCM,YAAaD,EAAeL,GAC5BQ,WAAYD,EAAcP,GAC1BY,oBAAqBD,EAAuBX,MA6BJ,CAAC8C,OAAAA,EAAAA,GAAQD,SAAAA,EAAAA,GAAUW,eAAAA,EAAAA,GAC9DL,uBAAAA,EAAAA,GAAwBM,qBAAAA,EAAAA,IADNK,CAEpBP","sources":["redux/users-selectors.js","webpack://my-app/./src/components/Users/Users.module.css?b9d0","webpack://my-app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.js","components/Users/Users.js","components/Users/UsersAPIContainer.js","components/Users/UsersContainer.js"],"sourcesContent":["//import { createSelector } from 'reselect' - for complex selectors\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n \r\nexport const getCurrentPage = (state) => {\r\n     return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Users_avatar__AgTtQ\",\"show_more_container\":\"Users_show_more_container__GWQ7x\",\"status\":\"Users_status__A0Km5\",\"user\":\"Users_user__VfVar\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__OvUQy\"};","import { useState } from 'react';\r\nimport clNames from './Paginator.module.css';\r\n\r\nconst Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let [pageNumber, setPageNumber] = useState(1);\r\n    let leftBorder = (pageNumber - 1) * props.pageSize + 1\r\n    let rightBorder = pageNumber * props.pageSize\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (<div>\r\n        {pageNumber > 1 && <button onClick={() => setPageNumber(pageNumber - 1)}>PREV</button>}\r\n        {pages\r\n            .filter(p => p >= leftBorder && p <= rightBorder)\r\n            .map(p => <button className={p === props.currentPage ? clNames.selectedPage : undefined} onClick={(e) => props.onPageChanged(p)}>{p}</button>)\r\n        }\r\n        <button onClick={() => setPageNumber(pageNumber + 1)}>NEXT</button>\r\n    </div>)\r\n}\r\n\r\nexport default Paginator;","import clNames from './Users.module.css';\r\nimport React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\n\r\nconst User = (props) => {\r\n    return (\r\n        <div className={clNames.user}>\r\n            <div><NavLink to={'/profile/' + props.id}>\r\n                <img src={props.avatar != null ? props.avatar : 'https://icdn.lenta.ru/images/2021/09/20/02/20210920021024196/square_320_5c43cbf4b742b3b9f6a141cef1a593ae.jpg'} alt='avatar' className={clNames.avatar} />\r\n            </NavLink> </div>\r\n            \r\n            <div>\r\n                <div>{props.name}</div>\r\n                <div className={clNames.status}>{props.status}</div>\r\n            </div>\r\n            <span>\r\n                {props.followed ? <button disabled={props.followingInProgress.some(id => id === props.id)} onClick={() => {\r\n                    props.unfollow(props.id)\r\n                }}>Unfollow</button>\r\n                    : <button disabled={props.followingInProgress.some(id => id === props.id)} onClick={() => {\r\n                        props.follow(props.id)\r\n                    }}>Follow</button>}\r\n            </span>\r\n        </div>)\r\n}\r\nlet Users = (props) => {\r\n\r\n    let usersElements = props.users.map(user => <User name={user.name} id={user.id} followed={user.followed} avatar={user.photos.small} status={user.status}\r\n        follow={() => { props.follow(user.id) }} unfollow={() => { props.unfollow(user.id) }} setFollowingInProgress={(followingInProgress, id) => { props.setFollowingInProgress(followingInProgress, id) }}\r\n        followingInProgress={props.followingInProgress} />);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    });\r\n    return (<div>\r\n        <div>\r\n            {usersElements}\r\n        </div>\r\n        <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}\r\n         onPageChanged={props.onPageChanged}  currentPage={props.currentPage} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import React from 'react';\r\nimport Preloader from '../Preloader';\r\nimport Users from './Users';\r\n\r\n\r\nclass UsersAPIContainer extends React.Component {\r\n    //если конструктор не делает ничего кроме перебрасывания пропсов в супер, его можно не писать\r\n    //constructor(props) {\r\n    //super(props);\r\n    //\r\n    \r\n    onPageChanged = (currentPage) => {\r\n        this.props.setCurrentPage(currentPage);\r\n        this.props.getUsersThunkCreator(currentPage, this.props.pageSize )\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.users.length === 0) {\r\n            this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n        }\r\n    }\r\n    render() {\r\n        return <>\r\n        {this.props.isFetching ? <Preloader/> : null}\r\n        <Users users={this.props.users}\r\n        totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        setFollowingInProgress={this.props.setFollowingInProgress}\r\n        followingInProgress={this.props.followingInProgress}\r\n\r\n        />\r\n        </>\r\n    }\r\n}\r\nexport default UsersAPIContainer;\r\n","import { connect } from \"react-redux\";\r\nimport { setCurrentPage, setFollowingInProgress, getUsersThunkCreator, follow, unfollow } from \"../../redux/users-reducer\";\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../redux/users-selectors\";\r\nimport UsersAPIContainer from \"./UsersAPIContainer\";\r\n\r\nlet mapStateToProps = function (state) {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n};\r\n//возвращается коллбэки, котор.мы будем отправлять в презентационную компоненту\r\n// let mapDispatchToProps = function (dispatch) {\r\n//     return {\r\n//         followUser: (userId) => {\r\n//             dispatch(followActionCreator(userId));\r\n//         },\r\n//         unfollowUser: (userId) => {\r\n//             dispatch(unfollowActionCreator(userId));\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersActionCreator(users));\r\n//         },\r\n//         setCurrentPage: (currentPage) => {\r\n//             dispatch(SetCurrentPageAC(currentPage));\r\n//         },\r\n//         setTotalCount: (totalCount) => {\r\n//             dispatch(setTotalCount(totalCount));\r\n//         },\r\n//         setIsFetching: (isFetching) => {\r\n//             dispatch(setIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// };\r\n\r\n\r\n\r\nconst UsersContainer = connect(mapStateToProps, {follow, unfollow, setCurrentPage, \r\n     setFollowingInProgress, getUsersThunkCreator,\r\n})(UsersAPIContainer);\r\n\r\nexport default UsersContainer;"],"names":["getUsers","state","usersPage","users","getPageSize","pageSize","getCurrentPage","currentPage","getIsFetching","isFetching","getTotalUsersCount","totalUsersCount","getFollowingInProgress","followingInProgress","props","pagesCount","Math","ceil","useState","pageNumber","setPageNumber","leftBorder","rightBorder","pages","i","push","onClick","filter","p","map","className","clNames","undefined","e","onPageChanged","User","to","id","src","avatar","alt","name","status","followed","disabled","some","unfollow","follow","usersElements","user","photos","small","setFollowingInProgress","useEffect","window","scrollTo","UsersAPIContainer","setCurrentPage","getUsersThunkCreator","this","length","Preloader","React","connect"],"sourceRoot":""}